{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Steve\\\\Documents\\\\OSU\\\\Side Projects\\\\Expenses\\\\expenses\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Steve\\\\Documents\\\\OSU\\\\Side Projects\\\\Expenses\\\\expenses\\\\app\\\\src\\\\Components\\\\Routes\\\\Expenses.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport { Container, Label, Input, FormGroup, Form, Button, Table, Alert } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../css/Expenses.css\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\"; //var jwt = require(\"jsonwebtoken\");\n\nclass Expenses extends Component {\n  // constructor\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      expenses: [],\n      categories: [],\n      itemDataPayload: {\n        price: Number,\n        description: \"\",\n        name: \"\",\n        expenseDate: new Date(),\n        userID: Number,\n        category: Number,\n        location: String\n      },\n      addedSuccess: false,\n      errorMessage: false\n    };\n    this.delete = this.delete.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getExpenses = this.getExpenses.bind(this);\n    this.edit = this.edit.bind(this);\n  } // life cycle methods\n\n\n  async componentDidMount() {\n    // set the user id\n    this.setState(prevState => {\n      let itemDataPayload = Object.assign({}, prevState.itemDataPayload);\n      itemDataPayload.userID = this.props.userId;\n      return {\n        itemDataPayload\n      };\n    }); // If-else block to determine to show all expenses or just the ones relevant to USER role\n\n    this.getExpenses(); // This will load for both roles\n\n    await axios.get(\"/api/categories/\").then(res => {\n      const categories = res.data;\n      this.setState({\n        categories,\n        isLoading: false\n      });\n    });\n  } // methods\n\n\n  async getExpenses() {\n    if (this.props.isAdmin) {\n      await axios.get(\"/api/expenses/\").then(res => {\n        const expenses = res.data;\n        this.setState({\n          expenses\n        });\n      });\n    } else {\n      await axios.get(\"/api/expenses/user/\".concat(this.props.userId)).then(res => {\n        const expenses = res.data;\n        this.setState({\n          expenses\n        });\n      });\n    }\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const itemDataPayload = this.state.itemDataPayload;\n    console.log(JSON.stringify(itemDataPayload));\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    await axios.post(\"/api/expenses/new\", JSON.stringify(itemDataPayload), config).then(res => {\n      if (res.status === 201) {\n        console.log(\"expense added\");\n        this.setState({\n          addedSuccess: true,\n          errorMessage: false\n        });\n      }\n    }).catch(err => {\n      this.setState({\n        errorMessage: true,\n        addedSuccess: false\n      });\n      console.log(\"ERROR POSTING TO EXPENSE\");\n      console.log(err);\n    }).then(() => {\n      this.getExpenses();\n    });\n  }\n\n  delete(itemId) {\n    axios.delete(\"/api/expense/\".concat(itemId)).then(res => {\n      let updatedExpenses = [...this.state.expenses].filter(element => element.id !== itemId);\n      this.setState({\n        expenses: updatedExpenses\n      });\n    });\n  }\n\n  edit(itemId) {\n    let objToEdit = this.expenseList[itemId - 1];\n    let id = objToEdit.id,\n        name = objToEdit.name,\n        price = objToEdit.price,\n        description = objToEdit.description,\n        location = objToEdit.location,\n        category = objToEdit.category,\n        user = objToEdit.user,\n        expenseDate = objToEdit.expenseDate;\n    let newItemDataPayload = {\n      price,\n      description,\n      name,\n      expenseDate,\n      userID: user.id,\n      category,\n      location\n    };\n    this.setState({\n      itemDataPayload: newItemDataPayload\n    });\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let itemDataPayload = _objectSpread({}, this.state.itemDataPayload);\n\n    itemDataPayload[name] = value;\n    this.setState({\n      itemDataPayload\n    });\n  }\n\n  handleDateChange(date) {\n    let itemDataPayload = _objectSpread({}, this.state.itemDataPayload);\n\n    itemDataPayload.expenseDate = date;\n    this.setState({\n      itemDataPayload\n    });\n  } // render\n\n\n  render() {\n    const addExpenseTitle = React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Add an Expense\");\n    const currentExpenseTitle = React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Existing Expenses\");\n    const _this$state = this.state,\n          expenses = _this$state.expenses,\n          categories = _this$state.categories,\n          isLoading = _this$state.isLoading;\n    console.log(expenses[0]);\n    let categoryList = categories.map(element => React.createElement(\"option\", {\n      value: element.name,\n      key: element.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, element.name));\n    let expenseList = expenses.map(element => React.createElement(\"tr\", {\n      key: element.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, element.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, element.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, element.category.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, element.price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      date: element.expensedate,\n      format: \"YYYY/MM/DD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, element.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, element.location), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, element.user.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      color: \"warning\",\n      onClick: () => this.edit(element.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Edit\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      color: \"danger\",\n      onClick: () => this.delete(element.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"X\"))));\n\n    if (isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"expenseContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, this.state.errorMessage ? React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Error adding expense!\") : null, this.state.addedSuccess ? React.createElement(Alert, {\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Expense added!\") : null, addExpenseTitle, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Expense Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Price (In USD)\"), React.createElement(Input, {\n      type: \"number\",\n      step: \"0.1\",\n      name: \"price\",\n      id: \"price\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      id: \"description\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"expenseDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Expense Date\"), \" \", React.createElement(DatePicker, {\n      selected: this.state.itemDataPayload[\"expenseDate\"],\n      onChange: this.handleDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Category\"), \" \", React.createElement(\"select\", {\n      name: \"category\",\n      onChange: this.handleChange,\n      defaultValue: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"select\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Select\"), categoryList)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Location\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"location\",\n      id: \"location\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Save\"), \" \", React.createElement(Button, {\n      color: \"warning\",\n      tag: Link,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Cancel\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), currentExpenseTitle, React.createElement(Table, {\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Price (USD)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Location\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, expenseList))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAdmin: state.auth.isAdmin,\n    userId: state.auth.id\n  };\n};\n\nexport default connect(mapStateToProps)(Expenses);","map":{"version":3,"sources":["C:\\Users\\Steve\\Documents\\OSU\\Side Projects\\Expenses\\expenses\\app\\src\\Components\\Routes\\Expenses.js"],"names":["React","Component","DatePicker","axios","Container","Label","Input","FormGroup","Form","Button","Table","Alert","Link","connect","Moment","Expenses","constructor","state","isLoading","expenses","categories","itemDataPayload","price","Number","description","name","expenseDate","Date","userID","category","location","String","addedSuccess","errorMessage","delete","bind","handleChange","handleDateChange","handleSubmit","getExpenses","edit","componentDidMount","setState","prevState","Object","assign","props","userId","get","then","res","data","isAdmin","event","preventDefault","console","log","JSON","stringify","config","headers","post","status","catch","err","itemId","updatedExpenses","filter","element","id","objToEdit","expenseList","user","newItemDataPayload","target","value","date","render","addExpenseTitle","currentExpenseTitle","categoryList","map","expensedate","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Container,\r\n  Label,\r\n  Input,\r\n  FormGroup,\r\n  Form,\r\n  Button,\r\n  Table,\r\n  Alert\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"../css/Expenses.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Moment from \"react-moment\";\r\n\r\n//var jwt = require(\"jsonwebtoken\");\r\n\r\nclass Expenses extends Component {\r\n  // constructor\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoading: true,\r\n      expenses: [],\r\n      categories: [],\r\n      itemDataPayload: {\r\n        price: Number,\r\n        description: \"\",\r\n        name: \"\",\r\n        expenseDate: new Date(),\r\n        userID: Number,\r\n        category: Number,\r\n        location: String\r\n      },\r\n      addedSuccess: false,\r\n      errorMessage: false\r\n    };\r\n    this.delete = this.delete.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.getExpenses = this.getExpenses.bind(this);\r\n    this.edit = this.edit.bind(this);\r\n  }\r\n\r\n  // life cycle methods\r\n  async componentDidMount() {\r\n    // set the user id\r\n    this.setState(prevState => {\r\n      let itemDataPayload = Object.assign({}, prevState.itemDataPayload);\r\n      itemDataPayload.userID = this.props.userId;\r\n      return { itemDataPayload };\r\n    });\r\n\r\n    // If-else block to determine to show all expenses or just the ones relevant to USER role\r\n    this.getExpenses();\r\n\r\n    // This will load for both roles\r\n    await axios.get(\"/api/categories/\").then(res => {\r\n      const categories = res.data;\r\n      this.setState({ categories, isLoading: false });\r\n    });\r\n  }\r\n\r\n  // methods\r\n  async getExpenses() {\r\n    if (this.props.isAdmin) {\r\n      await axios.get(\"/api/expenses/\").then(res => {\r\n        const expenses = res.data;\r\n        this.setState({ expenses });\r\n      });\r\n    } else {\r\n      await axios.get(`/api/expenses/user/${this.props.userId}`).then(res => {\r\n        const expenses = res.data;\r\n        this.setState({ expenses });\r\n      });\r\n    }\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const itemDataPayload = this.state.itemDataPayload;\r\n    console.log(JSON.stringify(itemDataPayload));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    await axios\r\n      .post(`/api/expenses/new`, JSON.stringify(itemDataPayload), config)\r\n      .then(res => {\r\n        if (res.status === 201) {\r\n          console.log(\"expense added\");\r\n          this.setState({ addedSuccess: true, errorMessage: false });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({ errorMessage: true, addedSuccess: false });\r\n        console.log(\"ERROR POSTING TO EXPENSE\");\r\n        console.log(err);\r\n      })\r\n      .then(() => {\r\n        this.getExpenses();\r\n      });\r\n  }\r\n\r\n  delete(itemId) {\r\n    axios.delete(`/api/expense/${itemId}`).then(res => {\r\n      let updatedExpenses = [...this.state.expenses].filter(\r\n        element => element.id !== itemId\r\n      );\r\n      this.setState({ expenses: updatedExpenses });\r\n    });\r\n  }\r\n\r\n  edit(itemId) {\r\n    let objToEdit = this.expenseList[itemId - 1];\r\n    let {\r\n      id,\r\n      name,\r\n      price,\r\n      description,\r\n      location,\r\n      category,\r\n      user,\r\n      expenseDate\r\n    } = objToEdit;\r\n\r\n    let newItemDataPayload = {\r\n      price,\r\n      description,\r\n      name,\r\n      expenseDate,\r\n      userID: user.id,\r\n      category,\r\n      location\r\n    };\r\n\r\n    this.setState({ itemDataPayload: newItemDataPayload });\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let itemDataPayload = { ...this.state.itemDataPayload };\r\n    itemDataPayload[name] = value;\r\n    this.setState({ itemDataPayload });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    let itemDataPayload = { ...this.state.itemDataPayload };\r\n    itemDataPayload.expenseDate = date;\r\n    this.setState({ itemDataPayload });\r\n  }\r\n\r\n  // render\r\n  render() {\r\n    const addExpenseTitle = <h3>Add an Expense</h3>;\r\n    const currentExpenseTitle = <h3>Existing Expenses</h3>;\r\n    const { expenses, categories, isLoading } = this.state;\r\n    console.log(expenses[0]);\r\n\r\n    let categoryList = categories.map(element => (\r\n      <option value={element.name} key={element.id}>\r\n        {element.name}\r\n      </option>\r\n    ));\r\n\r\n    let expenseList = expenses.map(element => (\r\n      <tr key={element.id}>\r\n        <td>{element.id}</td>\r\n        <td>{element.name}</td>\r\n        <td>{element.category.name}</td>\r\n        <td>{element.price}</td>\r\n        <td>\r\n          <Moment date={element.expensedate} format=\"YYYY/MM/DD\" />\r\n        </td>\r\n        <td>{element.description}</td>\r\n        <td>{element.location}</td>\r\n        <td>{element.user.name}</td>\r\n        <td>\r\n          <Button\r\n            size=\"sm\"\r\n            color=\"warning\"\r\n            onClick={() => this.edit(element.id)}\r\n          >\r\n            Edit\r\n          </Button>\r\n        </td>\r\n        <td>\r\n          <Button\r\n            size=\"sm\"\r\n            color=\"danger\"\r\n            onClick={() => this.delete(element.id)}\r\n          >\r\n            X\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n\r\n    if (isLoading) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Container className=\"expenseContainer\">\r\n          {this.state.errorMessage ? (\r\n            <Alert color=\"danger\">Error adding expense!</Alert>\r\n          ) : null}\r\n          {this.state.addedSuccess ? (\r\n            <Alert color=\"success\">Expense added!</Alert>\r\n          ) : null}\r\n          {addExpenseTitle}\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <FormGroup>\r\n              <Label for=\"title\">Expense Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"price\">Price (In USD)</Label>\r\n              <Input\r\n                type=\"number\"\r\n                step=\"0.1\"\r\n                name=\"price\"\r\n                id=\"price\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"description\">Description</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"description\"\r\n                id=\"description\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"expenseDate\">Expense Date</Label>{\" \"}\r\n              <DatePicker\r\n                selected={this.state.itemDataPayload[\"expenseDate\"]}\r\n                onChange={this.handleDateChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"category\">Category</Label>{\" \"}\r\n              <select\r\n                name=\"category\"\r\n                onChange={this.handleChange}\r\n                defaultValue=\"select\"\r\n              >\r\n                <option value=\"select\" disabled={true}>\r\n                  Select\r\n                </option>\r\n                {categoryList}\r\n              </select>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"location\">Location</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"location\"\r\n                id=\"location\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>{\" \"}\r\n              <Button color=\"warning\" tag={Link} to=\"/\">\r\n                Cancel\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n\r\n          <br />\r\n          <hr />\r\n          <br />\r\n\r\n          {currentExpenseTitle}\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Category</th>\r\n                <th>Price (USD)</th>\r\n                <th>Date</th>\r\n                <th>Description</th>\r\n                <th>Location</th>\r\n                <th>User</th>\r\n                <th>Edit</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{expenseList}</tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { isAdmin: state.auth.isAdmin, userId: state.auth.id };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Expenses);\r\n"]},"metadata":{},"sourceType":"module"}