{"ast":null,"code":"import axios from \"axios\";\nimport { LOGIN, LOGOUT, ACCESS_TOKEN, LOGIN_ERROR, REMOVE_ERROR } from \"../../Components/Constants/index\";\nimport authenticate from \"../../Utils/authenicate\";\nimport { removeState } from \"../../Utils/localstorage\"; // Local function only\n\nconst clearStates = () => {\n  authenticate.removeToken();\n  removeState();\n};\n\nexport const login = (payload, config) => dispatch => {\n  axios.post(\"/api/auth/signin\", payload, config).then(res => {\n    clearStates();\n    let accessToken = res.data.accessToken;\n    localStorage.setItem(ACCESS_TOKEN, accessToken);\n  }).then(res => {\n    let user = authenticate.getUser();\n    dispatch({\n      type: LOGIN,\n      payload: {\n        id: user.userId,\n        name: user.userName,\n        isAdmin: user.userAdmin,\n        loginError: false\n      }\n    });\n  }).catch(err => {\n    console.log(\"ERROR POSTING TO LOGIN\");\n    console.log(err);\n    dispatch({\n      type: LOGIN_ERROR,\n      loginError: true\n    });\n  });\n};\nexport const logout = () => dispatch => {\n  console.log(\"logout action called\");\n  clearStates();\n  dispatch({\n    type: LOGOUT\n  });\n};\nexport const removeError = () => dispatch => {\n  dispatch({\n    type: REMOVE_ERROR\n  });\n};","map":{"version":3,"sources":["C:\\Users\\Steve\\Documents\\OSU\\Side Projects\\Expenses\\expenses\\app\\src\\Redux\\Actions\\authorizeActions.js"],"names":["axios","LOGIN","LOGOUT","ACCESS_TOKEN","LOGIN_ERROR","REMOVE_ERROR","authenticate","removeState","clearStates","removeToken","login","payload","config","dispatch","post","then","res","accessToken","data","localStorage","setItem","user","getUser","type","id","userId","name","userName","isAdmin","userAdmin","loginError","catch","err","console","log","logout","removeError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,YALF,QAMO,kCANP;AAOA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,SAASC,WAAT,QAA4B,0BAA5B,C,CAEA;;AACA,MAAMC,WAAW,GAAG,MAAM;AACxBF,EAAAA,YAAY,CAACG,WAAb;AACAF,EAAAA,WAAW;AACZ,CAHD;;AAKA,OAAO,MAAMG,KAAK,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqBC,QAAQ,IAAI;AACpDb,EAAAA,KAAK,CACFc,IADH,qBAC4BH,OAD5B,EACqCC,MADrC,EAEGG,IAFH,CAEQC,GAAG,IAAI;AACXR,IAAAA,WAAW;AACX,QAAIS,WAAW,GAAGD,GAAG,CAACE,IAAJ,CAASD,WAA3B;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqBjB,YAArB,EAAmCc,WAAnC;AACD,GANH,EAOGF,IAPH,CAOQC,GAAG,IAAI;AACX,QAAIK,IAAI,GAAGf,YAAY,CAACgB,OAAb,EAAX;AACAT,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEtB,KADC;AAEPU,MAAAA,OAAO,EAAE;AACPa,QAAAA,EAAE,EAAEH,IAAI,CAACI,MADF;AAEPC,QAAAA,IAAI,EAAEL,IAAI,CAACM,QAFJ;AAGPC,QAAAA,OAAO,EAAEP,IAAI,CAACQ,SAHP;AAIPC,QAAAA,UAAU,EAAE;AAJL;AAFF,KAAD,CAAR;AASD,GAlBH,EAmBGC,KAnBH,CAmBSC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAnB,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEnB,WADC;AAEP0B,MAAAA,UAAU,EAAE;AAFL,KAAD,CAAR;AAID,GA1BH;AA2BD,CA5BM;AA8BP,OAAO,MAAMK,MAAM,GAAG,MAAMtB,QAAQ,IAAI;AACtCoB,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA1B,EAAAA,WAAW;AACXK,EAAAA,QAAQ,CAAC;AACPU,IAAAA,IAAI,EAAErB;AADC,GAAD,CAAR;AAGD,CANM;AAQP,OAAO,MAAMkC,WAAW,GAAG,MAAMvB,QAAQ,IAAI;AAC3CA,EAAAA,QAAQ,CAAC;AACPU,IAAAA,IAAI,EAAElB;AADC,GAAD,CAAR;AAGD,CAJM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  LOGIN,\r\n  LOGOUT,\r\n  ACCESS_TOKEN,\r\n  LOGIN_ERROR,\r\n  REMOVE_ERROR\r\n} from \"../../Components/Constants/index\";\r\nimport authenticate from \"../../Utils/authenicate\";\r\n\r\nimport { removeState } from \"../../Utils/localstorage\";\r\n\r\n// Local function only\r\nconst clearStates = () => {\r\n  authenticate.removeToken();\r\n  removeState();\r\n};\r\n\r\nexport const login = (payload, config) => dispatch => {\r\n  axios\r\n    .post(`/api/auth/signin`, payload, config)\r\n    .then(res => {\r\n      clearStates();\r\n      let accessToken = res.data.accessToken;\r\n      localStorage.setItem(ACCESS_TOKEN, accessToken);\r\n    })\r\n    .then(res => {\r\n      let user = authenticate.getUser();\r\n      dispatch({\r\n        type: LOGIN,\r\n        payload: {\r\n          id: user.userId,\r\n          name: user.userName,\r\n          isAdmin: user.userAdmin,\r\n          loginError: false\r\n        }\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(\"ERROR POSTING TO LOGIN\");\r\n      console.log(err);\r\n      dispatch({\r\n        type: LOGIN_ERROR,\r\n        loginError: true\r\n      });\r\n    });\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  console.log(\"logout action called\");\r\n  clearStates();\r\n  dispatch({\r\n    type: LOGOUT\r\n  });\r\n};\r\n\r\nexport const removeError = () => dispatch => {\r\n  dispatch({\r\n    type: REMOVE_ERROR\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}