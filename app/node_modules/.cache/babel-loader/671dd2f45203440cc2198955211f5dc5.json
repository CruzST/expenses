{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Steve\\\\Documents\\\\OSU\\\\Side Projects\\\\Expenses\\\\expenses\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Steve\\\\Documents\\\\OSU\\\\Side Projects\\\\Expenses\\\\expenses\\\\app\\\\src\\\\Components\\\\Routes\\\\EditExpense.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport { Container, Label, Input, FormGroup, Form, Button, Table, Alert } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\n\nclass EditExpense extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      categories: [],\n      itemDataPayload: {\n        price: Number,\n        description: \"\",\n        name: \"\",\n        expenseDate: new Date(),\n        userID: Number,\n        category: Number,\n        location: String\n      },\n      addedSuccess: false,\n      errorMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.location.state) {\n      let _this$props$location$ = this.props.location.state,\n          item = _this$props$location$.item,\n          categories = _this$props$location$.categories;\n      let prefill = {\n        price: item.price,\n        description: item.description,\n        name: item.name,\n        expenseDate: new Date(),\n        userID: item.user.id,\n        category: item.category.id,\n        location: item.location\n      };\n      this.setState({\n        itemDataPayload: prefill,\n        categories,\n        isLoading: false\n      });\n    }\n  }\n\n  async handleSubmit() {}\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let itemDataPayload = _objectSpread({}, this.state.itemDataPayload);\n\n    itemDataPayload[name] = value;\n    this.setState({\n      itemDataPayload\n    });\n  }\n\n  handleDateChange(date) {\n    let itemDataPayload = _objectSpread({}, this.state.itemDataPayload);\n\n    itemDataPayload.expenseDate = date;\n    this.setState({\n      itemDataPayload\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          categories = _this$state.categories;\n    let categoryList = categories.map(element => React.createElement(\"option\", {\n      value: element.name,\n      key: element.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, element.name));\n\n    if (isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Edit\")));\n  }\n\n}\n\nexport default EditExpense;","map":{"version":3,"sources":["C:\\Users\\Steve\\Documents\\OSU\\Side Projects\\Expenses\\expenses\\app\\src\\Components\\Routes\\EditExpense.js"],"names":["React","Component","DatePicker","axios","Container","Label","Input","FormGroup","Form","Button","Table","Alert","Link","connect","Moment","EditExpense","constructor","state","isLoading","categories","itemDataPayload","price","Number","description","name","expenseDate","Date","userID","category","location","String","addedSuccess","errorMessage","handleChange","bind","handleDateChange","handleSubmit","componentDidMount","props","item","prefill","user","id","setState","event","target","value","date","render","categoryList","map","element"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Container,\r\n  Label,\r\n  Input,\r\n  FormGroup,\r\n  Form,\r\n  Button,\r\n  Table,\r\n  Alert\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Moment from \"react-moment\";\r\n\r\nclass EditExpense extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoading: true,\r\n      categories: [],\r\n      itemDataPayload: {\r\n        price: Number,\r\n        description: \"\",\r\n        name: \"\",\r\n        expenseDate: new Date(),\r\n        userID: Number,\r\n        category: Number,\r\n        location: String\r\n      },\r\n      addedSuccess: false,\r\n      errorMessage: false\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.location.state) {\r\n      let { item, categories } = this.props.location.state;\r\n      let prefill = {\r\n        price: item.price,\r\n        description: item.description,\r\n        name: item.name,\r\n        expenseDate: new Date(),\r\n        userID: item.user.id,\r\n        category: item.category.id,\r\n        location: item.location\r\n      };\r\n      this.setState({ itemDataPayload: prefill, categories, isLoading: false });\r\n    }\r\n  }\r\n\r\n  async handleSubmit() {}\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let itemDataPayload = { ...this.state.itemDataPayload };\r\n    itemDataPayload[name] = value;\r\n    this.setState({ itemDataPayload });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    let itemDataPayload = { ...this.state.itemDataPayload };\r\n    itemDataPayload.expenseDate = date;\r\n    this.setState({ itemDataPayload });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, categories } = this.state;\r\n\r\n    let categoryList = categories.map(element => (\r\n      <option value={element.name} key={element.id}>\r\n        {element.name}\r\n      </option>\r\n    ));\r\n    if (isLoading) {\r\n      return <div>Loading...</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <h1>Edit</h1>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditExpense;\r\n"]},"metadata":{},"sourceType":"module"}