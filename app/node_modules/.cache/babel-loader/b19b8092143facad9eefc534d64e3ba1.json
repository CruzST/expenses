{"ast":null,"code":"import { ACCESS_TOKEN, SECRET } from \"../Components/Constants/index.js\";\n\nvar jwt = require(\"jsonwebtoken\");\n\nclass Authenticate {\n  // constructor\n  // methods\n\n  /* Function will access the local storage for the access token and return the sub # which is relevant to the user ID */\n  getUser() {\n    let token = localStorage.getItem(ACCESS_TOKEN);\n    let decode = jwt.verify(token, SECRET); //console.log(decode);\n\n    let user = {\n      userId: decode.sub,\n      userName: decode.name,\n      userAdmin: decode.admin\n    };\n    return user;\n  }\n\n  removeToken() {\n    localStorage.removeItem(ACCESS_TOKEN);\n  }\n\n}\n\nexport default new Authenticate();","map":{"version":3,"sources":["C:\\Users\\Steve\\Documents\\OSU\\Side Projects\\Expenses\\expenses\\app\\src\\Utils\\authenicate.js"],"names":["ACCESS_TOKEN","SECRET","jwt","require","Authenticate","getUser","token","localStorage","getItem","decode","verify","user","userId","sub","userName","name","userAdmin","admin","removeToken","removeItem"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,MAAvB,QAAqC,kCAArC;;AACA,IAAIC,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAjB;;AAEA,MAAMC,YAAN,CAAmB;AACjB;AAEA;;AAEA;AACAC,EAAAA,OAAO,GAAG;AACR,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBR,YAArB,CAAZ;AACA,QAAIS,MAAM,GAAGP,GAAG,CAACQ,MAAJ,CAAWJ,KAAX,EAAkBL,MAAlB,CAAb,CAFQ,CAGR;;AACA,QAAIU,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAEH,MAAM,CAACI,GADN;AAETC,MAAAA,QAAQ,EAAEL,MAAM,CAACM,IAFR;AAGTC,MAAAA,SAAS,EAAEP,MAAM,CAACQ;AAHT,KAAX;AAKA,WAAON,IAAP;AACD;;AAEDO,EAAAA,WAAW,GAAG;AACZX,IAAAA,YAAY,CAACY,UAAb,CAAwBnB,YAAxB;AACD;;AApBgB;;AAsBnB,eAAe,IAAII,YAAJ,EAAf","sourcesContent":["import { ACCESS_TOKEN, SECRET } from \"../Components/Constants/index.js\";\r\nvar jwt = require(\"jsonwebtoken\");\r\n\r\nclass Authenticate {\r\n  // constructor\r\n\r\n  // methods\r\n\r\n  /* Function will access the local storage for the access token and return the sub # which is relevant to the user ID */\r\n  getUser() {\r\n    let token = localStorage.getItem(ACCESS_TOKEN);\r\n    let decode = jwt.verify(token, SECRET);\r\n    //console.log(decode);\r\n    let user = {\r\n      userId: decode.sub,\r\n      userName: decode.name,\r\n      userAdmin: decode.admin\r\n    };\r\n    return user;\r\n  }\r\n\r\n  removeToken() {\r\n    localStorage.removeItem(ACCESS_TOKEN);\r\n  }\r\n}\r\nexport default new Authenticate();\r\n"]},"metadata":{},"sourceType":"module"}