{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Steve\\\\Documents\\\\OSU\\\\Side Projects\\\\Expenses\\\\expenses\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Steve\\\\Documents\\\\OSU\\\\Side Projects\\\\Expenses\\\\expenses\\\\app\\\\src\\\\Components\\\\Routes\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Container, Label, Input, FormGroup, Form, Button, Alert } from \"reactstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport NavigationBar from \"../NavigationBar\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../Redux/Actions/authorizeActions\";\n\nclass Login extends Component {\n  //constructor\n  constructor() {\n    super();\n    this.state = {\n      loginPayload: {\n        email: String,\n        password: String\n      },\n      redirected: false,\n      beginRedirect: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    // props is from the protectedRoute component\n    if (this.props.location.state) {\n      console.log(\"FROM: \");\n      console.log(this.props.location.state.from);\n      this.setState({\n        redirected: true\n      });\n    } else {\n      console.log(\"NO FROM\");\n    }\n  } // methods\n\n  /*\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const signinPayload = this.state.loginPayload;\r\n      const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    };\r\n      await axios\r\n      .post(`/api/auth/signin`, JSON.stringify(signinPayload), config)\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          ///////////////////////////////////////\r\n          if (localStorage.getItem(ACCESS_TOKEN)) {\r\n            localStorage.removeItem(ACCESS_TOKEN);\r\n          }\r\n          let accessToken = res.data.accessToken;\r\n          localStorage.setItem(ACCESS_TOKEN, accessToken);\r\n          /////////////////////////////////////////////////////\r\n          // If the user was redirected via protected route, there will be a \"from\" prop obj\r\n          let redirect = this.state.redirected\r\n            ? this.props.location.state.from\r\n            : \"/\";\r\n          this.props.history.push(redirect);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({ loginErorrStatus: true });\r\n        ///////////////////////////////////////////////////\r\n        console.log(\"ERROR POSTING TO LOGIN\");\r\n        console.log(err);\r\n        /////////////////////////////////////////////////\r\n      });\r\n  }\r\n  */\n  ///////////////////////////////////////////////////////////////////////////\n\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const signinPayload = this.state.loginPayload;\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    await this.props.login(signinPayload, config);\n\n    if (!this.props.showLoginError || this.props.showLoginError === null) {\n      this.setState({\n        beginRedirect: true\n      });\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let loginPayload = _objectSpread({}, this.state.loginPayload);\n\n    loginPayload[name] = value;\n    this.setState({\n      loginPayload\n    });\n  }\n\n  render() {\n    let _ref = this.props.location.state || {\n      from: {\n        pathname: \"/\"\n      }\n    },\n        from = _ref.from;\n\n    let beginRedirect = this.state.beginRedirect;\n    const loginTitle = React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Login\");\n    if (beginRedirect) return React.createElement(Redirect, {\n      to: from,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, loginTitle, this.props.showLoginError ? React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Error logging in!\") : null, this.state.redirected ? React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"You must be logged in to view that page!\") : null, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      required: true,\n      placeholder: \"DogLuver@gmail.com\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Login\"), \" \", React.createElement(Button, {\n      color: \"link\",\n      tag: Link,\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Register a new account\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    showLoginError: state.auth.loginError\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n/*\r\n  the above export is object shorthand form for mapping actions as props\r\n  : https://react-redux.js.org/api/connect\r\n*/","map":{"version":3,"sources":["C:\\Users\\Steve\\Documents\\OSU\\Side Projects\\Expenses\\expenses\\app\\src\\Components\\Routes\\Login.js"],"names":["React","Component","Container","Label","Input","FormGroup","Form","Button","Alert","Link","Redirect","NavigationBar","connect","login","Login","constructor","state","loginPayload","email","String","password","redirected","beginRedirect","handleSubmit","bind","handleChange","componentDidMount","props","location","console","log","from","setState","event","preventDefault","signinPayload","config","headers","showLoginError","target","value","name","render","pathname","loginTitle","mapStateToProps","auth","loginError"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Label,\r\n  Input,\r\n  FormGroup,\r\n  Form,\r\n  Button,\r\n  Alert\r\n} from \"reactstrap\";\r\n\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport NavigationBar from \"../NavigationBar\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../Redux/Actions/authorizeActions\";\r\n\r\nclass Login extends Component {\r\n  //constructor\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loginPayload: {\r\n        email: String,\r\n        password: String\r\n      },\r\n      redirected: false,\r\n      beginRedirect: false\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // props is from the protectedRoute component\r\n    if (this.props.location.state) {\r\n      console.log(\"FROM: \");\r\n      console.log(this.props.location.state.from);\r\n      this.setState({\r\n        redirected: true\r\n      });\r\n    } else {\r\n      console.log(\"NO FROM\");\r\n    }\r\n  }\r\n\r\n  // methods\r\n  /*\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const signinPayload = this.state.loginPayload;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    await axios\r\n      .post(`/api/auth/signin`, JSON.stringify(signinPayload), config)\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          ///////////////////////////////////////\r\n          if (localStorage.getItem(ACCESS_TOKEN)) {\r\n            localStorage.removeItem(ACCESS_TOKEN);\r\n          }\r\n          let accessToken = res.data.accessToken;\r\n          localStorage.setItem(ACCESS_TOKEN, accessToken);\r\n          /////////////////////////////////////////////////////\r\n          // If the user was redirected via protected route, there will be a \"from\" prop obj\r\n          let redirect = this.state.redirected\r\n            ? this.props.location.state.from\r\n            : \"/\";\r\n          this.props.history.push(redirect);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({ loginErorrStatus: true });\r\n        ///////////////////////////////////////////////////\r\n        console.log(\"ERROR POSTING TO LOGIN\");\r\n        console.log(err);\r\n        /////////////////////////////////////////////////\r\n      });\r\n  }\r\n  */\r\n  ///////////////////////////////////////////////////////////////////////////\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const signinPayload = this.state.loginPayload;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    await this.props.login(signinPayload, config);\r\n    if (!this.props.showLoginError || this.props.showLoginError === null) {\r\n      this.setState({ beginRedirect: true });\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let loginPayload = { ...this.state.loginPayload };\r\n    loginPayload[name] = value;\r\n    this.setState({ loginPayload });\r\n  }\r\n\r\n  render() {\r\n    let { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n    let { beginRedirect } = this.state;\r\n\r\n    const loginTitle = <h2>Login</h2>;\r\n\r\n    if (beginRedirect) return <Redirect to={from} />;\r\n\r\n    return (\r\n      <div>\r\n        <NavigationBar />\r\n        <Container>\r\n          {loginTitle}\r\n\r\n          {this.props.showLoginError ? (\r\n            <Alert color=\"danger\">Error logging in!</Alert>\r\n          ) : null}\r\n          {this.state.redirected ? (\r\n            <Alert color=\"danger\">\r\n              You must be logged in to view that page!\r\n            </Alert>\r\n          ) : null}\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <FormGroup>\r\n              <Label for=\"email\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                required\r\n                placeholder=\"DogLuver@gmail.com\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"password\">Password</Label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Login\r\n              </Button>{\" \"}\r\n              <Button color=\"link\" tag={Link} to=\"/register\">\r\n                Register a new account\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showLoginError: state.auth.loginError\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n\r\n/*\r\n  the above export is object shorthand form for mapping actions as props\r\n  : https://react-redux.js.org/api/connect\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}