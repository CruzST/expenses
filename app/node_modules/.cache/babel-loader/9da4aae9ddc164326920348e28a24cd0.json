{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Steve\\\\Documents\\\\OSU\\\\Side Projects\\\\Expenses\\\\expenses\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Steve\\\\Documents\\\\OSU\\\\Side Projects\\\\Expenses\\\\expenses\\\\app\\\\src\\\\Components\\\\Routes\\\\Category.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Label, Input, FormGroup, Form, Button, Table, UncontrolledAlert } from \"reactstrap\";\n\nclass Category extends Component {\n  // constructor\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      categories: [],\n      errorMessage: false,\n      addedMessage: false,\n      categoryPayload: {\n        name: \"\"\n      },\n      deleteError: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.delete = this.delete.bind(this);\n  } // life cycle\n\n\n  async componentDidMount() {\n    const response = await fetch(\"/api/categories/\"); // proxy in package.json is set to the server the back end is on\n\n    const body = await response.json();\n    this.setState({\n      categories: body,\n      isLoading: false\n    });\n  }\n\n  async componentDidUpdate() {\n    const response = await fetch(\"/api/categories/\"); // proxy in package.json is set to the server the back end is on\n\n    const body = await response.json();\n    this.setState({\n      categories: body,\n      isLoading: false\n    });\n  } // methods\n\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const categoryPayload = this.state.categoryPayload;\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    await axios.post(\"/api/categories/new\", JSON.stringify(categoryPayload), config).then(res => {\n      if (res.status === 201) {\n        this.setState({\n          errorMessage: false,\n          addedMessage: true\n        });\n      } else {\n        console.log(\"Status 201 was not rcvd. Got code: \" + res.status);\n      } //event.target.reset();\n\n    }).catch(err => {\n      console.log(err);\n\n      if (err.response.status === 409) {\n        console.log(\"Category already exists\");\n        this.setState({\n          errorMessage: true,\n          addedMessage: false\n        });\n      }\n    });\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let categoryPayload = _objectSpread({}, this.state.categoryPayload);\n\n    categoryPayload[name] = value;\n    this.setState({\n      categoryPayload\n    });\n  }\n\n  delete(id) {\n    axios.delete(\"/api/categories/\".concat(id)).then(res => {\n      let updatedCategories = [...this.state.categories].filter(element => element.id !== id);\n      this.setState({\n        categories: updatedCategories\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        deleteError: true\n      });\n    });\n  } //render\n\n\n  render() {\n    const _this$state = this.state,\n          categories = _this$state.categories,\n          isLoading = _this$state.isLoading;\n    const addCategoryTitle = React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Add a new Category\");\n    const existingCategoryTitle = React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Existing Categories\");\n    let categoryList = categories.map(element => React.createElement(\"tr\", {\n      key: element.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, element.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, element.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      color: \"danger\",\n      onClick: () => this.delete(element.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"X\"))));\n\n    if (isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, addCategoryTitle, this.state.errorMessage ? React.createElement(UncontrolledAlert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Error, category already exists!\") : null, this.state.addedMessage ? React.createElement(UncontrolledAlert, {\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Category added!\") : null, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Category Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Save\"), \" \", React.createElement(Button, {\n      color: \"warning\",\n      tag: Link,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Cancel\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), existingCategoryTitle, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, categoryList))));\n  }\n\n}\n\nexport default Category;","map":{"version":3,"sources":["C:\\Users\\Steve\\Documents\\OSU\\Side Projects\\Expenses\\expenses\\app\\src\\Components\\Routes\\Category.js"],"names":["React","Component","axios","Link","Container","Label","Input","FormGroup","Form","Button","Table","UncontrolledAlert","Category","constructor","state","isLoading","categories","errorMessage","addedMessage","categoryPayload","name","deleteError","handleSubmit","bind","handleChange","delete","componentDidMount","response","fetch","body","json","setState","componentDidUpdate","event","preventDefault","config","headers","post","JSON","stringify","then","res","status","console","log","catch","err","target","value","id","updatedCategories","filter","element","render","addCategoryTitle","existingCategoryTitle","categoryList","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Label,\r\n  Input,\r\n  FormGroup,\r\n  Form,\r\n  Button,\r\n  Table,\r\n  UncontrolledAlert\r\n} from \"reactstrap\";\r\n\r\nclass Category extends Component {\r\n  // constructor\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoading: true,\r\n      categories: [],\r\n      errorMessage: false,\r\n      addedMessage: false,\r\n      categoryPayload: {\r\n        name: \"\"\r\n      },\r\n      deleteError: false\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n  }\r\n\r\n  // life cycle\r\n  async componentDidMount() {\r\n    const response = await fetch(\"/api/categories/\"); // proxy in package.json is set to the server the back end is on\r\n    const body = await response.json();\r\n    this.setState({ categories: body, isLoading: false });\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    const response = await fetch(\"/api/categories/\"); // proxy in package.json is set to the server the back end is on\r\n    const body = await response.json();\r\n    this.setState({ categories: body, isLoading: false });\r\n  }\r\n\r\n  // methods\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const categoryPayload = this.state.categoryPayload;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    await axios\r\n      .post(`/api/categories/new`, JSON.stringify(categoryPayload), config)\r\n      .then(res => {\r\n        if (res.status === 201) {\r\n          this.setState({ errorMessage: false, addedMessage: true });\r\n        } else {\r\n          console.log(\"Status 201 was not rcvd. Got code: \" + res.status);\r\n        }\r\n        //event.target.reset();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        if (err.response.status === 409) {\r\n          console.log(\"Category already exists\");\r\n          this.setState({ errorMessage: true, addedMessage: false });\r\n        }\r\n      });\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let categoryPayload = { ...this.state.categoryPayload };\r\n    categoryPayload[name] = value;\r\n    this.setState({ categoryPayload });\r\n  }\r\n\r\n  delete(id) {\r\n    axios\r\n      .delete(`/api/categories/${id}`)\r\n      .then(res => {\r\n        let updatedCategories = [...this.state.categories].filter(\r\n          element => element.id !== id\r\n        );\r\n        this.setState({ categories: updatedCategories });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ deleteError: true });\r\n      });\r\n  }\r\n\r\n  //render\r\n  render() {\r\n    const { categories, isLoading } = this.state;\r\n    const addCategoryTitle = <h3>Add a new Category</h3>;\r\n    const existingCategoryTitle = <h3>Existing Categories</h3>;\r\n\r\n    let categoryList = categories.map(element => (\r\n      <tr key={element.id}>\r\n        <td>{element.id}</td>\r\n        <td>{element.name}</td>\r\n        <td>\r\n          <Button\r\n            size=\"sm\"\r\n            color=\"danger\"\r\n            onClick={() => this.delete(element.id)}\r\n          >\r\n            X\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n\r\n    if (isLoading) {\r\n      return <div>Loading...</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <Container>\r\n          {addCategoryTitle}\r\n          {this.state.errorMessage ? (\r\n            <UncontrolledAlert color=\"danger\">\r\n              Error, category already exists!\r\n            </UncontrolledAlert>\r\n          ) : null}\r\n          {this.state.addedMessage ? (\r\n            <UncontrolledAlert color=\"success\">\r\n              Category added!\r\n            </UncontrolledAlert>\r\n          ) : null}\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <FormGroup>\r\n              <Label for=\"title\">Category Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>{\" \"}\r\n              <Button color=\"warning\" tag={Link} to=\"/\">\r\n                Cancel\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n\r\n          <br />\r\n          <hr />\r\n          <br />\r\n          {existingCategoryTitle}\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{categoryList}</tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}