{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Steve\\\\Documents\\\\OSU\\\\Side Projects\\\\Expenses\\\\expenses\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Steve\\\\Documents\\\\OSU\\\\Side Projects\\\\Expenses\\\\expenses\\\\app\\\\src\\\\Components\\\\Category.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Label, Input, FormGroup, Form, Button, Table } from \"reactstrap\";\n\nclass Category extends Component {\n  // constructor\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      categories: [],\n      errorMessage: false,\n      categoryPayload: {\n        name: \"\"\n      }\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  } // life cycle\n\n\n  async componentDidMount() {\n    const response = await fetch(\"/api/categories\"); // proxy in package.json is set to the server the back end is on\n\n    const body = await response.json();\n    this.setState({\n      categories: body,\n      isLoading: false\n    });\n  } // methods\n\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const categoryPayload = this.state.categoryPayload;\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    await axios.post(\"/api/category/new\", JSON.stringify(categoryPayload), config).then(res => {\n      if (res.status === 201) {\n        console.log(res);\n        console.log(categoryPayload);\n        console.log(\"CATEGORY ADDED\"); //this.props.history.push(\"/login\");\n      } else {\n        console.log(\"Eror posting to category\");\n        console.log(res.status);\n      } //event.target.reset();\n\n    }).catch(err => {\n      console.log(err);\n\n      if (err.response.status === 409) {\n        console.log(\"ERROR 409 rcvd. email already exists.\");\n        this.setState({\n          errorMessage: true\n        });\n      }\n    });\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let categoryPayload = _objectSpread({}, this.state.categoryPayload);\n\n    categoryPayload[name] = value;\n    this.setState({\n      categoryPayload\n    });\n  } //render\n\n\n  render() {\n    const _this$state = this.state,\n          categories = _this$state.categories,\n          isLoading = _this$state.isLoading;\n    const addCategoryTitle = React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Add a new Category\");\n    const existingCategoryTitle = React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Existing Category\");\n    let categoryList = categories.map(element => React.createElement(\"tr\", {\n      key: element.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, element.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, element.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      color: \"danger\",\n      onClick: () => this.delete(element.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"X\"))));\n\n    if (isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, addCategoryTitle, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Category Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Save\"), \" \", React.createElement(Button, {\n      color: \"warning\",\n      tag: Link,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Cancel\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), existingCategoryTitle, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, categoryList))));\n  }\n\n}\n\nexport default Category;","map":{"version":3,"sources":["C:\\Users\\Steve\\Documents\\OSU\\Side Projects\\Expenses\\expenses\\app\\src\\Components\\Category.js"],"names":["React","Component","axios","Link","Container","Label","Input","FormGroup","Form","Button","Table","Category","constructor","state","isLoading","categories","errorMessage","categoryPayload","name","handleSubmit","bind","handleChange","componentDidMount","response","fetch","body","json","setState","event","preventDefault","config","headers","post","JSON","stringify","then","res","status","console","log","catch","err","target","value","render","addCategoryTitle","existingCategoryTitle","categoryList","map","element","id","delete"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,SADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,MANF,EAOEC,KAPF,QAQO,YARP;;AAUA,MAAMC,QAAN,SAAuBV,SAAvB,CAAiC;AAC/B;AACAW,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,YAAY,EAAE,KAHH;AAIXC,MAAAA,eAAe,EAAE;AACfC,QAAAA,IAAI,EAAE;AADS;AAJN,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD,GAd8B,CAgB/B;;;AACA,QAAME,iBAAN,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAD,CAA5B,CADwB,CACyB;;AACjD,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEZ,MAAAA,UAAU,EAAEU,IAAd;AAAoBX,MAAAA,SAAS,EAAE;AAA/B,KAAd;AACD,GArB8B,CAuB/B;;;AACA,QAAMK,YAAN,CAAmBS,KAAnB,EAA0B;AACxBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMZ,eAAe,GAAG,KAAKJ,KAAL,CAAWI,eAAnC;AAEA,UAAMa,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAM7B,KAAK,CACR8B,IADG,sBACuBC,IAAI,CAACC,SAAL,CAAejB,eAAf,CADvB,EACwDa,MADxD,EAEHK,IAFG,CAEEC,GAAG,IAAI;AACX,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYtB,eAAZ;AACAqB,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAHsB,CAItB;AACD,OALD,MAKO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,MAAhB;AACD,OATU,CAWX;;AACD,KAdG,EAeHG,KAfG,CAeGC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;;AACA,UAAIA,GAAG,CAAClB,QAAJ,CAAac,MAAb,KAAwB,GAA5B,EAAiC;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA,aAAKZ,QAAL,CAAc;AAAEX,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD;AACF,KArBG,CAAN;AAsBD;;AAEDK,EAAAA,YAAY,CAACO,KAAD,EAAQ;AAClB,UAAMc,MAAM,GAAGd,KAAK,CAACc,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,UAAMzB,IAAI,GAAGwB,MAAM,CAACxB,IAApB;;AACA,QAAID,eAAe,qBAAQ,KAAKJ,KAAL,CAAWI,eAAnB,CAAnB;;AACAA,IAAAA,eAAe,CAACC,IAAD,CAAf,GAAwByB,KAAxB;AACA,SAAKhB,QAAL,CAAc;AAAEV,MAAAA;AAAF,KAAd;AACD,GAjE8B,CAmE/B;;;AACA2B,EAAAA,MAAM,GAAG;AAAA,wBAC2B,KAAK/B,KADhC;AAAA,UACCE,UADD,eACCA,UADD;AAAA,UACaD,SADb,eACaA,SADb;AAEP,UAAM+B,gBAAgB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAzB;AACA,UAAMC,qBAAqB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA9B;AAEA,QAAIC,YAAY,GAAGhC,UAAU,CAACiC,GAAX,CAAeC,OAAO,IACvC;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,OAAO,CAACC,EAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,OAAO,CAAC/B,IAAb,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKiC,MAAL,CAAYF,OAAO,CAACC,EAApB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAHF,CADiB,CAAnB;;AAgBA,QAAIpC,SAAJ,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG+B,gBADH,EAEE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAK1B,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,MAHL;AAIE,MAAA,QAAQ,EAAE,KAAKE,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGY,GAHZ,EAIE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,GAAG,EAAElB,IAA7B;AAAmC,MAAA,EAAE,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CAXF,CAFF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,EA0BG2C,qBA1BH,EA2BE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQC,YAAR,CARF,CA3BF,CADF,CADF;AA0CD;;AAtI8B;;AAyIjC,eAAepC,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Label,\r\n  Input,\r\n  FormGroup,\r\n  Form,\r\n  Button,\r\n  Table\r\n} from \"reactstrap\";\r\n\r\nclass Category extends Component {\r\n  // constructor\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoading: true,\r\n      categories: [],\r\n      errorMessage: false,\r\n      categoryPayload: {\r\n        name: \"\"\r\n      }\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // life cycle\r\n  async componentDidMount() {\r\n    const response = await fetch(\"/api/categories\"); // proxy in package.json is set to the server the back end is on\r\n    const body = await response.json();\r\n    this.setState({ categories: body, isLoading: false });\r\n  }\r\n\r\n  // methods\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const categoryPayload = this.state.categoryPayload;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    await axios\r\n      .post(`/api/category/new`, JSON.stringify(categoryPayload), config)\r\n      .then(res => {\r\n        if (res.status === 201) {\r\n          console.log(res);\r\n          console.log(categoryPayload);\r\n          console.log(\"CATEGORY ADDED\");\r\n          //this.props.history.push(\"/login\");\r\n        } else {\r\n          console.log(\"Eror posting to category\");\r\n          console.log(res.status);\r\n        }\r\n\r\n        //event.target.reset();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        if (err.response.status === 409) {\r\n          console.log(\"ERROR 409 rcvd. email already exists.\");\r\n          this.setState({ errorMessage: true });\r\n        }\r\n      });\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let categoryPayload = { ...this.state.categoryPayload };\r\n    categoryPayload[name] = value;\r\n    this.setState({ categoryPayload });\r\n  }\r\n\r\n  //render\r\n  render() {\r\n    const { categories, isLoading } = this.state;\r\n    const addCategoryTitle = <h3>Add a new Category</h3>;\r\n    const existingCategoryTitle = <h3>Existing Category</h3>;\r\n\r\n    let categoryList = categories.map(element => (\r\n      <tr key={element.id}>\r\n        <td>{element.id}</td>\r\n        <td>{element.name}</td>\r\n        <td>\r\n          <Button\r\n            size=\"sm\"\r\n            color=\"danger\"\r\n            onClick={() => this.delete(element.id)}\r\n          >\r\n            X\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n\r\n    if (isLoading) {\r\n      return <div>Loading...</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        <Container>\r\n          {addCategoryTitle}\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <FormGroup>\r\n              <Label for=\"title\">Category Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>{\" \"}\r\n              <Button color=\"warning\" tag={Link} to=\"/\">\r\n                Cancel\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n\r\n          <br />\r\n          <hr />\r\n          <br />\r\n          {existingCategoryTitle}\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{categoryList}</tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}