{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Steve\\\\Documents\\\\OSU\\\\Side Projects\\\\Expenses\\\\expenses\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Steve\\\\Documents\\\\OSU\\\\Side Projects\\\\Expenses\\\\expenses\\\\app\\\\src\\\\Components\\\\Routes\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Container, Label, Input, FormGroup, Form, Button, UncontrolledAlert } from \"reactstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login, removeError } from \"../../Redux/Actions/authorizeActions\";\n\nclass Login extends Component {\n  //constructor\n  constructor() {\n    super();\n    this.state = {\n      loginPayload: {\n        email: String,\n        password: String\n      },\n      redirected: false,\n      registerRedirect: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.removeLoginError = this.removeLoginError.bind(this);\n  }\n\n  componentDidMount() {\n    // props is from the protectedRoute component, if there is a \"state\",  and \"from\" line\n    // it was redirected due to invalid auth. else it came from register\n    if (this.props.location.state) {\n      //console.log(this.props.location.state.from === undefined);\n      let _this$props$location$ = this.props.location.state,\n          successMessage = _this$props$location$.successMessage,\n          from = _this$props$location$.from;\n\n      if (from) {\n        this.setState({\n          redirected: true\n        });\n      }\n\n      if (successMessage) {\n        this.setState({\n          registerRedirect: true\n        });\n      }\n      /*\r\n      if (this.props.location.state.from !== undefined) {\r\n        this.setState({\r\n          redirected: true\r\n        });\r\n      }\r\n      */\n\n    } else {\n      console.log(\"NO FROM\");\n    }\n  } // methods\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const signinPayload = this.state.loginPayload;\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    this.props.login(signinPayload, config);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let loginPayload = _objectSpread({}, this.state.loginPayload);\n\n    loginPayload[name] = value;\n    this.setState({\n      loginPayload\n    });\n  }\n\n  rmLoginErrMsg() {\n    this.props.removeError();\n  }\n\n  rmUserAddMsg() {\n    this.setState({\n      registerRedirect: false\n    });\n  }\n\n  render() {\n    const loginTitle = React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Login\");\n\n    let _ref = this.props.location.state || {\n      from: {\n        pathname: \"/\"\n      }\n    },\n        from = _ref.from;\n\n    let beginRedirect = this.props.userLoggedIn || false;\n    let userAdded = this.state.userAdded;\n    /*The component will redirect ONLY AFTER the user as logged in.*/\n\n    if (beginRedirect) {\n      return React.createElement(Redirect, {\n        to: from,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, loginTitle, this.props.showLoginError ? React.createElement(UncontrolledAlert, {\n      color: \"danger\",\n      onClick: this.removeLoginError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Error logging in!\") : null, this.state.redirected ? React.createElement(UncontrolledAlert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"You must be logged in to view that page!\") : null, userAdded ? React.createElement(UncontrolledAlert, {\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"User added! Please log in.\") : null, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      required: true,\n      placeholder: \"DogLuver@gmail.com\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Login\"), \" \", React.createElement(Button, {\n      color: \"link\",\n      tag: Link,\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Register a new account\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    showLoginError: state.auth.loginError,\n    userLoggedIn: state.auth.isLoggedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login,\n  removeError\n})(Login);\n/*\r\n  the above export is object shorthand form for mapping actions as props\r\n  : https://react-redux.js.org/api/connect\r\n*/","map":{"version":3,"sources":["C:\\Users\\Steve\\Documents\\OSU\\Side Projects\\Expenses\\expenses\\app\\src\\Components\\Routes\\Login.js"],"names":["React","Component","Container","Label","Input","FormGroup","Form","Button","UncontrolledAlert","Link","Redirect","connect","login","removeError","Login","constructor","state","loginPayload","email","String","password","redirected","registerRedirect","handleSubmit","bind","handleChange","removeLoginError","componentDidMount","props","location","successMessage","from","setState","console","log","event","preventDefault","signinPayload","config","headers","target","value","name","rmLoginErrMsg","rmUserAddMsg","render","loginTitle","pathname","beginRedirect","userLoggedIn","userAdded","showLoginError","mapStateToProps","auth","loginError","isLoggedIn"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Label,\r\n  Input,\r\n  FormGroup,\r\n  Form,\r\n  Button,\r\n  UncontrolledAlert\r\n} from \"reactstrap\";\r\n\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, removeError } from \"../../Redux/Actions/authorizeActions\";\r\n\r\nclass Login extends Component {\r\n  //constructor\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loginPayload: {\r\n        email: String,\r\n        password: String\r\n      },\r\n      redirected: false,\r\n      registerRedirect: false\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.removeLoginError = this.removeLoginError.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // props is from the protectedRoute component, if there is a \"state\",  and \"from\" line\r\n    // it was redirected due to invalid auth. else it came from register\r\n    if (this.props.location.state) {\r\n      //console.log(this.props.location.state.from === undefined);\r\n\r\n      let { successMessage, from } = this.props.location.state;\r\n\r\n      if (from) {\r\n        this.setState({\r\n          redirected: true\r\n        });\r\n      }\r\n      if (successMessage) {\r\n        this.setState({ registerRedirect: true });\r\n      }\r\n      /*\r\n      if (this.props.location.state.from !== undefined) {\r\n        this.setState({\r\n          redirected: true\r\n        });\r\n      }\r\n      */\r\n    } else {\r\n      console.log(\"NO FROM\");\r\n    }\r\n  }\r\n\r\n  // methods\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const signinPayload = this.state.loginPayload;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    };\r\n    this.props.login(signinPayload, config);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let loginPayload = { ...this.state.loginPayload };\r\n    loginPayload[name] = value;\r\n    this.setState({ loginPayload });\r\n  }\r\n\r\n  rmLoginErrMsg() {\r\n    this.props.removeError();\r\n  }\r\n\r\n  rmUserAddMsg() {\r\n    this.setState({ registerRedirect: false });\r\n  }\r\n\r\n  render() {\r\n    const loginTitle = <h2>Login</h2>;\r\n\r\n    let { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n    let beginRedirect = this.props.userLoggedIn || false;\r\n\r\n    let { userAdded } = this.state;\r\n\r\n    /*The component will redirect ONLY AFTER the user as logged in.*/\r\n    if (beginRedirect) {\r\n      return <Redirect to={from} />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Container>\r\n          {loginTitle}\r\n\r\n          {this.props.showLoginError ? (\r\n            <UncontrolledAlert color=\"danger\" onClick={this.removeLoginError}>\r\n              Error logging in!\r\n            </UncontrolledAlert>\r\n          ) : null}\r\n          {this.state.redirected ? (\r\n            <UncontrolledAlert color=\"danger\">\r\n              You must be logged in to view that page!\r\n            </UncontrolledAlert>\r\n          ) : null}\r\n          {userAdded ? (\r\n            <UncontrolledAlert color=\"success\">\r\n              User added! Please log in.\r\n            </UncontrolledAlert>\r\n          ) : null}\r\n\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <FormGroup>\r\n              <Label for=\"email\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                required\r\n                placeholder=\"DogLuver@gmail.com\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"password\">Password</Label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Login\r\n              </Button>{\" \"}\r\n              <Button color=\"link\" tag={Link} to=\"/register\">\r\n                Register a new account\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showLoginError: state.auth.loginError,\r\n    userLoggedIn: state.auth.isLoggedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login, removeError }\r\n)(Login);\r\n\r\n/*\r\n  the above export is object shorthand form for mapping actions as props\r\n  : https://react-redux.js.org/api/connect\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}